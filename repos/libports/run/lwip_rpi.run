if {![expr [have_spec rpi4]]} {
	puts "\n Run script is not supported on this platform. \n"; exit 0 }

set lynx [installed_command lynx]

build {
	core init timer
	drivers/platform/spec/rpi4
	drivers/nic/rpi
	test/lwip/http_srv
	lib/vfs/lwip
}

create_boot_directory

install_config {
<config verbose="yes" prio_levels="2">
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>

	<start name="rpi4_platform_drv" caps="200">
		<resource name="RAM" quantum="8M"/>
		<provides> <service name="Platform"/> </provides>
	</start>

	<start name="rpi_nic_drv" caps="1000" managing_system="yes">
		<resource name="RAM" quantum="32M"/>
		<provides> <service name="Nic"/> </provides>
	</start>

	<start name="test-lwip_httpsrv" caps="120">
		<resource name="RAM" quantum="4M"/>
		<config>
			<vfs>
				<dir name="dev">    <log/>             </dir>
				<dir name="socket"> <lwip dhcp="yes"/> </dir>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" socket="/socket"/>
		</config>
	</start>
</config>
}

set boot_modules {
	core init timer
	rpi4_platform_drv
	rpi_nic_drv
	ld.lib.so libc.lib.so vfs.lib.so vfs_lwip.lib.so test-lwip_httpsrv
}

build_boot_image $boot_modules
